[gd_scene load_steps=21 format=2]

[ext_resource path="res://assets/ground.tres" type="Material" id=1]
[ext_resource path="res://assets/wall.tres" type="Material" id=2]
[ext_resource path="res://aban/data/data.gd" type="Script" id=3]
[ext_resource path="res://assets/ghost/ghost.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends System


func _ready() -> void:
	data.rng.randomize()
	data.show_camera.current = true
	data.is_on_show = true
	for t in data.ghosts_tweens:
		data.add_child(t as Tween)
	queue_free()
	
"

[sub_resource type="GDScript" id=2]
script/source = "extends System


const SPEED : float = -50.0


func _process(delta : float) -> void:
	if data.is_on_show:
		data.show_node.rotate_y(deg2rad(delta * SPEED))
"

[sub_resource type="GDScript" id=3]
script/source = "extends System


const SPEED : float = 1.0


var initial_show_node_y_rot : float
var initial_show_cam_trans : Transform


func _input(event : InputEvent) -> void:
	if not data.is_on_show:
		return
	
	if event.is_action_pressed(\"start\"):
		data.is_on_show = false
		# start_initiation
		initial_show_node_y_rot = data.show_node.rotation.y
		initial_show_cam_trans = data.show_camera.transform
		$Tween.interpolate_method(self, \"initiate\", 0.0, 1.0, SPEED, Tween.TRANS_LINEAR, Tween.EASE_IN)
		$Tween.start()


func initiate(time : float) -> void:
	data.show_node.rotation.y = lerp_angle(initial_show_node_y_rot, 0, time)
	data.show_camera.transform = initial_show_cam_trans.interpolate_with(data.player_camera.global_transform, time)
	data.show_camera.fov = lerp(70, 120, time)


func _on_Tween_tween_all_completed() -> void:
	data.player_camera.current = true
	data.is_on_play = true
	data.emit_signal(\"on_play\")
"

[sub_resource type="GDScript" id=4]
script/source = "extends System


const SPEED : float = 0.5


var perv_pos : Vector3
var next_pos : Vector3


func _ready() -> void:
	next_pos = data.player.transform.origin
	var err := data.connect(\"on_play\", self, \"_on_Tween_tween_all_completed\")
	if err:
		printerr(\"On Player on_play Connecting Signal Error: \", err)


func _on_Tween_tween_all_completed() -> void:
	if data.is_on_play:
		next_move()


func next_move() -> void:
	perv_pos = data.player.transform.origin
	var forward := Vector3.FORWARD.rotated(Vector3.UP, deg2rad(data.player_dir))
	data.player_raycast.transform.origin = Vector3.ZERO
	data.player_raycast.global_transform.basis = Basis.IDENTITY
	data.player_raycast.cast_to = forward * 3
	data.player_raycast.force_raycast_update()
	if not data.player_raycast.get_collider():
		next_pos = next_pos + (forward * 2)
	$Tween.interpolate_method(self, \"move\", 0.0, 1.0, SPEED, Tween.TRANS_LINEAR, Tween.EASE_IN)
	$Tween.start()


func move(time : float) -> void:
	data.player.transform.origin = perv_pos.linear_interpolate(next_pos, time)









"

[sub_resource type="GDScript" id=5]
script/source = "extends System


const SPEED : float = 0.2


var perv_basis : Basis
var next_basis : Basis


func _input(event : InputEvent) -> void:
	if data.is_on_play:
		if $Tween.is_active():
			return
		if event.is_action_pressed(\"left\"):
			rotate(90)
		elif event.is_action_pressed(\"right\"):
			rotate(-90)
		elif event.is_action_pressed(\"back\"):
			rotate_back()


func rotate_back() -> void:
	if data.rng.randi_range(0, 1):
		rotate(-180)
	else:
		rotate(180)


func rotate(dir : int) -> void:
	if not ray_test(dir):
		return
	data.player_dir = (dir + data.player_dir) % 360
	perv_basis = data.player.transform.basis
	next_basis = Basis.IDENTITY.rotated(Vector3.UP, deg2rad(data.player_dir))
	$Tween.interpolate_method(self, \"smooth_rotation\", 0.0, 1.0, SPEED, Tween.TRANS_LINEAR, Tween.EASE_IN)
	$Tween.start()


func ray_test(dir : int) -> bool:
	data.player_raycast.transform = Transform.IDENTITY
	data.player_raycast.cast_to = Vector3.FORWARD.rotated(Vector3.UP, deg2rad(dir)) * 3
	data.player_raycast.force_raycast_update()
	if data.player_raycast.get_collider():
		return false
	else:
		return true


func smooth_rotation(time : float) -> void:
	data.player.transform.basis = perv_basis.slerp(next_basis, time)


"

[sub_resource type="GDScript" id=16]
script/source = "extends System


func _ready() -> void:
	for i in data.ghosts_tweens.size():
		var tween := data.ghosts_tweens[i] as Tween
		var err := tween.connect(\"tween_all_completed\", self, \"_on_Tween_tween_all_completed\", [i])
		if err:
			printerr(\"On Ghosts Tweens Connecting Signal Error: \", err)


func _on_Tween_tween_all_completed(index : int) -> void:
	var message_name_queue := data.message_queue[index][0] as Array
	if message_name_queue.size() > 0:
		read_and_apply_message(index)
	else:
		if data.is_on_play:
			$\"../GhostsMovement\".next_move(index)
			read_and_apply_message(index)


func read_and_apply_message(index : int) -> void:
	var message_object_queue := data.message_queue[index][0] as Array
	var message_name_queue := data.message_queue[index][1] as Array
	var message_time_queue := data.message_queue[index][2] as Array
	var object := message_object_queue[0] as Object
	message_object_queue.remove(0)
	var name := message_name_queue[0] as String
	message_name_queue.remove(0)
	var time := message_time_queue[0] as float
	message_time_queue.remove(0)
	var tween := data.ghosts_tweens[index] as Tween
# warning-ignore:return_value_discarded
	tween.interpolate_method(object, name, .0, 1.0, time, Tween.TRANS_LINEAR, Tween.EASE_IN)
# warning-ignore:return_value_discarded
	tween.start()





"

[sub_resource type="GDScript" id=17]
script/source = "extends System


const MOVE_SPEED : float = .5
const ROTATE_SPEED :float = .2

var perv_pos : PoolVector3Array
var next_pos : PoolVector3Array


func _ready() -> void:
	for g in data.ghosts:
		var ghost := g as Ghost
		perv_pos.append(ghost.transform.origin)
		next_pos.append(ghost.transform.origin)


func next_move(index : int) -> void:
	perv_pos.resize(0)
	for g in data.ghosts:
		var ghost := g as Ghost
		perv_pos.append(ghost.transform.origin)
	
	for i in next_pos.size():
		var forward := Vector3.FORWARD.rotated(Vector3.UP, deg2rad(data.ghosts_dir[i]))
		next_pos[i] = next_pos[i] + (forward * 2)
	
	var message_name_queue := data.message_queue[index][0] as Array
	var message_time_queue := data.message_queue[index][1] as Array
	message_name_queue.append(\"move\")
	message_time_queue.append(MOVE_SPEED)


func move(time : float) -> void:
	for i in data.ghosts.size():
		var ghost := data.ghosts[i] as Ghost
		var pp := perv_pos[i] as Vector3
		var np := next_pos[i] as Vector3
		ghost.transform.origin = pp.linear_interpolate(np, time)


func rotate(time : float) -> void:
	pass
"

[sub_resource type="PlaneMesh" id=6]
size = Vector2( 60, 56 )

[sub_resource type="PrismMesh" id=11]
size = Vector3( 1, 2, 1 )

[sub_resource type="SpatialMaterial" id=12]
albedo_color = Color( 1, 0, 0, 1 )
metallic = 0.5

[sub_resource type="SpatialMaterial" id=13]
albedo_color = Color( 1, 0.478431, 1, 1 )

[sub_resource type="SpatialMaterial" id=14]
albedo_color = Color( 0, 0.576471, 1, 1 )

[sub_resource type="SpatialMaterial" id=15]
albedo_color = Color( 1, 0.521569, 0.376471, 1 )

[sub_resource type="ProceduralSky" id=8]

[sub_resource type="Environment" id=9]
background_mode = 2
background_sky = SubResource( 8 )
background_sky_custom_fov = 80.0

[sub_resource type="GDScript" id=10]
script/source = "extends Camera


func _physics_process(_delta : float) -> void:
	if not current:
		current = true
	pass
"

[node name="Main" type="Node"]

[node name="Data" type="Node" parent="."]
script = ExtResource( 3 )

[node name="Systems" type="Node" parent="."]

[node name="SetupGame" type="Node" parent="Systems"]
script = SubResource( 1 )

[node name="RotateShow" type="Node" parent="Systems"]
script = SubResource( 2 )

[node name="InitiatePlay" type="Node" parent="Systems"]
script = SubResource( 3 )

[node name="Tween" type="Tween" parent="Systems/InitiatePlay"]

[node name="PlayerMovement" type="Node" parent="Systems"]
script = SubResource( 4 )

[node name="Tween" type="Tween" parent="Systems/PlayerMovement"]

[node name="PlayerRotation" type="Node" parent="Systems"]
script = SubResource( 5 )

[node name="Tween" type="Tween" parent="Systems/PlayerRotation"]

[node name="GhostsTweens" type="Node" parent="Systems"]
script = SubResource( 16 )

[node name="GhostsMovement" type="Node" parent="Systems"]
script = SubResource( 17 )

[node name="Scene" type="Node" parent="."]

[node name="Map" type="Node" parent="Scene"]

[node name="Ground" type="MeshInstance" parent="Scene/Map"]
mesh = SubResource( 6 )
material/0 = ExtResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Borders" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="Bottom" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -31, 1, 0 )
depth = 54.0

[node name="Top" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 31, 1, 0 )
depth = 54.0

[node name="LeftBottom" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -20, 1, -28 )
width = 24.0

[node name="RightBottom" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -20, 1, 28 )
width = 24.0

[node name="LeftTop" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 22, 1, -28 )
width = 20.0

[node name="RightTop" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 22, 1, 28 )
width = 20.0

[node name="LeftLittle" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 1, -25 )
depth = 4.0

[node name="RightLittle" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 1, 25 )
depth = 4.0

[node name="MiddleOne" type="CSGBox" parent="Scene/Map/Borders"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 26, 1, 0 )
width = 8.0

[node name="Anchors" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="LeftAnchor" type="CSGBox" parent="Scene/Map/Anchors"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -25, 1, -14 )
depth = 18.0

[node name="LeftAnchorOne" type="CSGBox" parent="Scene/Map/Anchors"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -21, 1, -12 )
width = 6.0

[node name="RightAnchor" type="CSGBox" parent="Scene/Map/Anchors"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -25, 1, 14 )
depth = 18.0

[node name="RightAnchorOne" type="CSGBox" parent="Scene/Map/Anchors"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -21, 1, 12 )
width = 6.0

[node name="TShapes" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="BottomBottomTHandle" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -23, 1, 0 )
width = 6.0

[node name="BottomBottomTHead" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 1, 0 )
depth = 14.0

[node name="BottomTHandle" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -11, 1, 0 )
width = 6.0

[node name="BottomTHead" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -7, 1, 0 )
depth = 14.0

[node name="TopTHandle" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 13, 1, 0 )
width = 6.0

[node name="TopTHead" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 17, 1, 0 )
depth = 14.0

[node name="LeftTHandle" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 11, 1, -8 )
depth = 6.0

[node name="LefTHead" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 11, 1, -12 )
width = 14.0

[node name="RightTHandle" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 11, 1, 8 )
depth = 6.0

[node name="RightTHead" type="CSGBox" parent="Scene/Map/TShapes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 11, 1, 12 )
width = 14.0

[node name="Corners" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="LeftCornerHead" type="CSGBox" parent="Scene/Map/Corners"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -13, 1, -20 )
depth = 6.0

[node name="LeftCornerHandle" type="CSGBox" parent="Scene/Map/Corners"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -17, 1, -18 )
width = 6.0

[node name="RightCornerHead" type="CSGBox" parent="Scene/Map/Corners"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -13, 1, 20 )
depth = 6.0

[node name="RightCornerHandle" type="CSGBox" parent="Scene/Map/Corners"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -17, 1, 18 )
width = 6.0

[node name="Lines" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="BottomLeft" type="CSGBox" parent="Scene/Map/Lines"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -13, 1, -9 )
depth = 8.0

[node name="BottomRight" type="CSGBox" parent="Scene/Map/Lines"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -13, 1, 9 )
depth = 8.0

[node name="LeftOne" type="CSGBox" parent="Scene/Map/Lines"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4, 1, -12 )
width = 8.0

[node name="RightOne" type="CSGBox" parent="Scene/Map/Lines"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4, 1, 12 )
width = 8.0

[node name="TopLeft" type="CSGBox" parent="Scene/Map/Lines"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 17, 1, -20 )
depth = 6.0

[node name="TopRight" type="CSGBox" parent="Scene/Map/Lines"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 17, 1, 20 )
depth = 6.0

[node name="Boxes" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="MostLeft" type="CSGBox" parent="Scene/Map/Boxes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 24, 1, -20 )
width = 4.0
depth = 6.0

[node name="Left" type="CSGBox" parent="Scene/Map/Boxes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 24, 1, -9 )
width = 4.0
depth = 8.0

[node name="Right" type="CSGBox" parent="Scene/Map/Boxes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 24, 1, 10 )
width = 4.0
depth = 8.0

[node name="MostRight" type="CSGBox" parent="Scene/Map/Boxes"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 24, 1, 20 )
width = 4.0
depth = 6.0

[node name="Gates" type="CSGCombiner" parent="Scene/Map"]
material_override = ExtResource( 2 )
use_collision = true
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="LeftBottom" type="CSGBox" parent="Scene/Map/Gates"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4, 1, -23 )
width = 8.0
depth = 12.0

[node name="LeftTop" type="CSGBox" parent="Scene/Map/Gates"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 8, 1, -23 )
width = 8.0
depth = 12.0

[node name="RightBottom" type="CSGBox" parent="Scene/Map/Gates"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4, 1, 23 )
width = 8.0
depth = 12.0

[node name="RightTop" type="CSGBox" parent="Scene/Map/Gates"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 8, 1, 23 )
width = 8.0
depth = 12.0

[node name="Player" type="Area" parent="Scene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -16, 1, -1 )

[node name="Camera" type="Camera" parent="Scene/Player"]
current = true
fov = 120.0

[node name="RayCast" type="RayCast" parent="Scene/Player"]
cast_to = Vector3( 0, 0, -3 )

[node name="MeshInstance" type="MeshInstance" parent="Scene/Player"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 2, 0 )
mesh = SubResource( 11 )
material/0 = null

[node name="Oikake" parent="Scene" instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 0, 0 )
material = SubResource( 12 )

[node name="Machibuse" parent="Scene" instance=ExtResource( 4 )]
material = SubResource( 13 )

[node name="Kimagure" parent="Scene" instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -4 )
material = SubResource( 14 )

[node name="Otoboke" parent="Scene" instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4 )
material = SubResource( 15 )

[node name="Show" type="Spatial" parent="Scene"]
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="ShowCamera" type="Camera" parent="Scene/Show"]
transform = Transform( 1, 0, 0, 0, 0.939693, 0.34202, 0, -0.34202, 0.939693, 0, 20, 45 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="Scene"]
environment = SubResource( 9 )

[node name="Debug" type="Node" parent="."]

[node name="Camera" type="Camera" parent="Debug"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, 1, 0, -1, -1.62921e-07, 0, 23, 0 )
projection = 1
size = 76.0
script = SubResource( 10 )
[connection signal="tween_all_completed" from="Systems/InitiatePlay/Tween" to="Systems/InitiatePlay" method="_on_Tween_tween_all_completed"]
[connection signal="tween_all_completed" from="Systems/PlayerMovement/Tween" to="Systems/PlayerMovement" method="_on_Tween_tween_all_completed"]
